// Given an integer n, return the number of trailing zeroes in n!.
// Note: Your solution should be in logarithmic time complexity.

//Idea: 0 are generated by production of even number and 5. So, all we have to do is count the number of 5.
//Example: n = 15, there are three 5s in 5, 10 and 15. And six 5s in 5, 10, 15, 20 and 25, note that 25 contains two 5s.

public class Solution {
    public int trailingZeroes(int n) {
        int count = 0;
        while(n > 0){
            n /= 5;
            count += n;
        }
        return count;
    }
}


